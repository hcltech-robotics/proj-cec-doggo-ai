services:
  apriltag_navigation:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: robot-base:latest 
    network_mode: "host"  # Required for ROS2 discovery and robot communication
    privileged: true  # Required for hardware access
    environment:
      - ROS_DOMAIN_ID=10
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    devices:
      - /dev/input:/dev/input  # For joystick access
    restart: unless-stopped
    command:  ["ros2", "launch", "apriltag_navigation", "nav_lite.launch.py"]
  gaugenet:
    image: robot-base:latest 
    environment:
      - ROS_DOMAIN_ID=10
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - MODEL_SERVER_URL=${MODEL_SERVER_URL:-x}  
      - TOKEN=${TOKEN:-doggodoggo}
    network_mode: "host"  # Required for ROS2 discovery and robot communication
    privileged: true  # Required for hardware access
    restart: unless-stopped
    command:  ["ros2", "launch", "gauge_net", "gauge_net_lite.launch.py", "model_server_url:=${MODEL_SERVER_URL}", "token:=${TOKEN}"]
  webrtc:
    image: robot-base:latest
    environment:
      - ROBOT_IP=${ROBOT_IP} 
      - CONN_TYPE=${CONN_TYPE:-webrtc}
      - WEBRTC_SERVER_HOST=0.0.0.0  # Listen on all interfaces
      - WEBRTC_SERVER_PORT=${WEBRTC_SERVER_PORT:-9991}
      - DISPLAY=${DISPLAY:-}  # For GUI applications like rviz2
      - ROS_DOMAIN_ID=10
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    network_mode: "host"  # Required for ROS2 discovery and robot communication
    privileged: true  # Required for hardware access
    devices:
      - /dev/input:/dev/input  # For joystick access
    restart: unless-stopped
    command: ["ros2", "launch", "go2_robot_sdk", "webrtc_web.launch.py"]
  web:
    image: proj-cec-doggo-web:latest
    network_mode: "host"
    environment:
     - ROBOT_IP=${ROBOT_IP} 
     - ROS_DOMAIN_ID=10
    restart: unless-stopped



